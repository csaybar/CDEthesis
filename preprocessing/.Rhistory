CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/"
CLOUD_MODEL_FOLDER
CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/"
CLOUDSEN12_METADATA <- read_csv("/media/csaybar/58059B472A3AA231/cloudsen12_metadata_v7.csv")
#' Preprocessing cloud models
#' @author csaybar
#'
library(doMC)
library(stars)
library(foreach)
library(tidyverse)
require(MLmetrics)
registerDoMC(12)
source("utils.R")
source("utils.R")
#' Preprocessing cloud models
#' @author csaybar
#'
library(doMC)
library(stars)
library(foreach)
library(tidyverse)
require(MLmetrics)
registerDoMC(12)
source("utils.R")
#' Preprocessing cloud models
#' @author csaybar
#'
library(doMC)
library(stars)
library(foreach)
library(reticulate)
library(tidyverse)
require(MLmetrics)
registerDoMC(12)
source("utils.R")
CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/"
CLOUDSEN12_METADATA <- read_csv("/media/csaybar/58059B472A3AA231/cloudsen12_metadata_v7.csv")
source("utils.R")
#' Preprocessing cloud models
#' @author csaybar
#'
library(doMC)
library(stars)
library(foreach)
library(reticulate)
library(tidyverse)
require(MLmetrics)
registerDoMC(12)
source("utils.R")
CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/"
CLOUDSEN12_METADATA <- read_csv("/media/csaybar/58059B472A3AA231/cloudsen12_metadata_v7.csv")
CLOUDSEN12_METADATA <- read_csv("/media/csaybar/58059B472A3AA231/cloudsen12_metadata_v7.csv")
CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/"
CLOUDSEN12_METADATA <- read_csv("/media/csaybar/58059B472A3AA231/cloudsen12_metadata_v7.csv")
CLOUDSEN12_METADATA <- CLOUDSEN12_METADATA[CLOUDSEN12_METADATA$label_type == "high" & CLOUDSEN12_METADATA$cloud_coverage == "low-cloudy",]
CLOUDSEN12_METADATA
CLOUDSEN12_METADATA <- CLOUDSEN12_METADATA[CLOUDSEN12_METADATA$label_type == "high" & CLOUDSEN12_METADATA$cloud_coverage == "low-cloudy",]
CLOUDSEN12_IDS <- sprintf("__%s__%s.tif", CLOUDSEN12_METADATA$roi_id, CLOUDSEN12_METADATA$s2_id_gee)
GT_FILES <- list(
hq = sprintf("%s/z_target/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS),
sc = sprintf("%s/z_target/scribble/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS)
)
GT_FILES
## hq
# s2cloudless
S2CLOUDLESS_FILES <- sprintf("%s/fmask/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS)
S2CLOUDLESS_FILES
S2CLOUDLESS_FILES
length(S2CLOUDLESS_FILES)
a <- read_stars(S2CLOUDLESS_FILES[index])  == 4
index <- 1
a <- read_stars(S2CLOUDLESS_FILES[index])  == 4
S2CLOUDLESS_FILES[index]
CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/models/"
index <- 1
a <- read_stars(S2CLOUDLESS_FILES[index])  == 4
S2CLOUDLESS_FILES[index]
CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/models/"
CLOUDSEN12_METADATA <- read_csv("/media/csaybar/58059B472A3AA231/cloudsen12_metadata_v7.csv")
CLOUDSEN12_METADATA <- CLOUDSEN12_METADATA[CLOUDSEN12_METADATA$label_type == "high" & CLOUDSEN12_METADATA$cloud_coverage == "low-cloudy",]
CLOUDSEN12_IDS <- sprintf("__%s__%s.tif", CLOUDSEN12_METADATA$roi_id, CLOUDSEN12_METADATA$s2_id_gee)
GT_FILES <- list(
hq = sprintf("%s/z_target/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS),
sc = sprintf("%s/z_target/scribble/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS)
)
## hq
# s2cloudless
S2CLOUDLESS_FILES <- sprintf("%s/fmask/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS)
index <- 1
a <- read_stars(S2CLOUDLESS_FILES[index])  == 4
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
st_point_centroid
#' Preprocessing cloud models
#' @author csaybar
#'
library(doMC)
library(stars)
library(foreach)
library(reticulate)
library(tidyverse)
require(MLmetrics)
registerDoMC(12)
source("utils.R")
CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/models/"
CLOUDSEN12_METADATA <- read_csv("/media/csaybar/58059B472A3AA231/cloudsen12_metadata_v7.csv")
CLOUDSEN12_METADATA <- CLOUDSEN12_METADATA[CLOUDSEN12_METADATA$label_type == "high" & CLOUDSEN12_METADATA$cloud_coverage == "low-cloudy",]
CLOUDSEN12_IDS <- sprintf("__%s__%s.tif", CLOUDSEN12_METADATA$roi_id, CLOUDSEN12_METADATA$s2_id_gee)
GT_FILES <- list(
hq = sprintf("%s/z_target/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS),
sc = sprintf("%s/z_target/scribble/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS)
)
GT_FILES <- list(
hq = sprintf("%s/z_target/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS),
sc = sprintf("%s/z_target/scribble/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS)
)
## hq
# s2cloudless
S2CLOUDLESS_FILES <- sprintf("%s/fmask/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS)
index <- 1
a <- read_stars(S2CLOUDLESS_FILES[index])  == 4
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
index <- 1
a <- read_stars(S2CLOUDLESS_FILES[index])  %in%  c(1,2)
a
read_stars(S2CLOUDLESS_FILES[index])
a <- read_stars(S2CLOUDLESS_FILES[index])  == c(8, 9)
a
a <- read_stars(S2CLOUDLESS_FILES[index])
a
a == 8 & a == 9
a <- a == 8 & a == 9
a
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 & a == 9
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
c(x = st_point_centroid[[1]][1], y = st_point_centroid[[1]][2], results = FilteredTverskyMetric_raster(a, b))
a
plot(a)
b <- read_stars(GT_FILES$hq[index]) == 1
plot(b)
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 & a == 9
plot(b)
plot(b)
b <- read_stars(GT_FILES$hq[index]) == 1
b
plot(b)
index <- 2
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
b <- read_stars(GT_FILES$hq[index]) == 1
b
plot(b)
plot(a)
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
c(x = st_point_centroid[[1]][1], y = st_point_centroid[[1]][2], results = FilteredTverskyMetric_raster(a, b))
# cot
s2cloudless_results_cot <- foreach(index=1:2000, .combine = bind_rows) %dopar% {
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
c(x = st_point_centroid[[1]][1], y = st_point_centroid[[1]][2], results = FilteredTverskyMetric_raster(a, b))
}
plot(st_as_sf(s2cloudless_results, coords = c("x", "y")))
s2cloudless_results_cot
plot(st_as_sf(s2cloudless_results_cot, coords = c("x", "y")))
s2cloudless_results$results <- log1p(s2cloudless_results$results)
index
index
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
st_point_centroid
st_point_centroid
b
b
b[[1]]
MLmetrics::Accuracy(b[[1]], a[[1]])
plot(a)
plot(b)
S2CLOUDLESS_FILES
# accuracy
i <- 10
a <- read_stars(S2CLOUDLESS_FILES[index])
a == 8
plot(a == 8)
# accuracy
i <- 20
a <- read_stars(S2CLOUDLESS_FILES[index])
plot(a == 8)
plot(a)
## hq
# s2cloudless
S2CLOUDLESS_FILES <- sprintf("%s/sen2cor/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS)
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
a
plot(a)
plot(b)
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
c(x = st_point_centroid[[1]][1], y = st_point_centroid[[1]][2], results = FilteredTverskyMetric_raster(a, b))
# cot
s2cloudless_results_cot <- foreach(index=1:2000, .combine = bind_rows) %dopar% {
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
c(x = st_point_centroid[[1]][1], y = st_point_centroid[[1]][2], results = FilteredTverskyMetric_raster(a, b))
}
# cot
sen2cor_cot <- foreach(index=1:2000, .combine = bind_rows) %dopar% {
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
c(x = st_point_centroid[[1]][1], y = st_point_centroid[[1]][2], results = FilteredTverskyMetric_raster(a, b))
}
# accuracy
sen2cor_acc <- foreach(index=1:2000, .combine = bind_rows) %dopar% {
a <- read_stars(S2CLOUDLESS_FILES[index])
a <- a == 8 | a == 9
b <- read_stars(GT_FILES$hq[index]) == 1
st_point_centroid <- st_bbox(a) %>% st_as_sfc() %>% st_transform(4326) %>% st_centroid()
c(x = st_point_centroid[[1]][1], y = st_point_centroid[[1]][2], results = MLmetrics::Accuracy(b[[1]], a[[1]]))
}
plot(st_as_sf(sen2cor_cot, coords = c("x", "y")))
plot(st_as_sf(sen2cor_acc, coords = c("x", "y")))
fresults <- st_as_sf(sen2cor_acc, coords = c("x", "y"))
fresults
mapview::mapview(fresults)
sen2cor_acc
sen2cor_acc$results
mean(sen2cor_acc$results)
hist(sen2cor_acc$results)
mean(sen2cor_cot$results)
hist(sen2cor_cot$results)
mean(sen2cor_cot$results)
hist(sen2cor_cot$results)
mean(sen2cor_cot$results)
hist(sen2cor_cot$results)
library(sf)
library(rgee)
library(doMC)
library(dplyr)
library(stars)
library(stars)
library(foreach)
library(tidyverse)
require(MLmetrics)
library(rgeeExtra)
library(reticulate)
ee_Initialize()
registerDoMC(12)
source("utils.R")
CLOUDSEN12_METADATA <- read_csv("/media/csaybar/58059B472A3AA231/cloudsen12_metadata_v8.csv")
CLOUDSEN12_METADATA <- CLOUDSEN12_METADATA[CLOUDSEN12_METADATA$label_type == "high",]
CLOUDSEN12_IDS <- sprintf("__%s__%s.tif", CLOUDSEN12_METADATA$roi_id, CLOUDSEN12_METADATA$s2_id_gee)
# 1. global parameters -------------------------------------------------------
CLOUD_MODEL_FOLDER <- "/home/csaybar/Documents/Github/thesis/preprocessing/models/"
GT_FILES <- list(
hq = sprintf("%s/z_target/hq/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS),
sc = sprintf("%s/z_target/scribble/%s", CLOUD_MODEL_FOLDER, CLOUDSEN12_IDS),
type = CLOUDSEN12_METADATA$label_type
)
# 2. Generate predictors ---------------------------------------------------
dataset_predictors <- generate_dataset_predictors(output = "cloud_dt.csv")
full_dataset <- merge(dataset_predictors, dataset_target, by = "ROI_ID")
# 3. Add target --------------------------------------------------------------
dataset_target <- generate_dataset_target(cd_model = "sen2cor", output = "cloud_target.csv")
read_csv("cloud_db.csv")
full_dataset <- read_csv("cloud_db.csv")
full_dataset
mapview::mapview(full_dataset[c("AC_cloud", "ROI_ID")], zcol = "AC_cloud", legend = FALSE)
full_dataset
full_dataset$AC_clear
mapview::mapview(full_dataset[c("AC_cloud", "ROI_ID")], zcol = "AC_cloud", legend = FALSE)
full_dataset$AC_cloud
mapview::mapview(full_dataset[c("AC_cloud", "ROI_ID")], zcol = "AC_cloud", legend = FALSE)
full_dataset
full_dataset$geometry
st_as_sf(full_dataset)
st_as_sf(full_dataset, geometry=full_dataset$geometry)
full_dataset
st_as_sfc(full_dataset, geometry=full_dataset$geometry)
st_as_sfc(geometry=full_dataset$geometry)
full_dataset$geometry
read_sf(full_dataset)
full_dataset
full_dataset$geometry
full_dataset$geometry[1]
eval(full_dataset$geometry[1])
eval(parse(text=eval(full_dataset$geometry[1])))
st_point(eval(parse(text=eval(full_dataset$geometry[1]))))
lapply(1:10000, function(x) st_point(eval(parse(text=eval(full_dataset$geometry[x])))))
full_dataset$geometry
length(full_dataset$geometry)
lapply(1:2000, function(x) st_point(eval(parse(text=eval(full_dataset$geometry[x])))))
full_dataset <- read_csv("cloud_db.csv")
full_dataset
llt <- lapply(1:2000, function(x) st_point(eval(parse(text=eval(full_dataset$geometry[x])))))
llt
llt
st_as_sfc(llt)
full_dataset <- read_csv("cloud_db.csv")
st_as_sf(full_dataset, geometry = st_as_sfc(llt))
full_dataset <- st_as_sf(full_dataset, geometry = st_as_sfc(llt))
full_dataset <- read_csv("cloud_db.csv")
llt <- lapply(1:2000, function(x) st_point(eval(parse(text=eval(full_dataset$geometry[x])))))
full_dataset <- st_as_sf(full_dataset, geometry = st_as_sfc(llt))
mapview::mapview(full_dataset[c("AC_cloud", "ROI_ID")], zcol = "AC_cloud", legend = FALSE)
mm <- mapview::mapview(full_dataset[c("AC_cloud", "ROI_ID")], zcol = "AC_cloud", legend = FALSE)
mapview::mapshot(mm, file = "/home/csaybar/Documents/Github/cloudsen12/CDEthesis/preprocessing/map.html")
mapview::mapviewOptions(fgb = FALSE)
mapview::mapshot(mm, file = "/home/csaybar/Documents/Github/cloudsen12/CDEthesis/preprocessing/map.html")
mapview::mapviewOptions(fgb = FALSE)
mapview::mapshot(mm, file = "/home/csaybar/Documents/Github/cloudsen12/CDEthesis/preprocessing/map.html")
library(mapview)
mm <- mapview(full_dataset[c("AC_cloud", "ROI_ID")], zcol = "AC_cloud", legend = FALSE)
library(mapview)
mapviewOptions(fgb = FALSE)
mapshot(mm, file = "/home/csaybar/Documents/Github/cloudsen12/CDEthesis/preprocessing/map.html")
mapviewOptions(fgb = FALSE)
library(mapview)
mapviewOptions(fgb = FALSE)
library(mapview)
mapviewOptions(fgb = FALSE)
mm <- mapview(full_dataset[c("AC_cloud", "ROI_ID")], zcol = "AC_cloud", legend = FALSE)
mapshot(mm, file = "/home/csaybar/Documents/Github/cloudsen12/CDEthesis/preprocessing/map.html")
mapshot(mm, url = "/home/csaybar/Documents/Github/cloudsen12/CDEthesis/preprocessing/map.html")
full_dataset
full_dataset <- read_csv("cloud_db.csv")
llt <- lapply(1:2000, function(x) st_point(eval(parse(text=eval(full_dataset$geometry[x])))))
full_dataset <- st_as_sf(full_dataset, geometry = st_as_sfc(llt))
st_crs(full_dataset) <- 4326
library(mapview)
mapviewOptions(fgb = FALSE)
mm <- mapview(full_dataset[c("AC_cloud", "ROI_ID")], zcol = "AC_cloud", legend = FALSE)
mapshot(mm, url = "/home/csaybar/Documents/Github/cloudsen12/CDEthesis/preprocessing/map.html")
